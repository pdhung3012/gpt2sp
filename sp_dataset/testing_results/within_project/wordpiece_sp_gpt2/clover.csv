issuekey,title,description,storypoint,raw predictions
CLOV-1614,Error when closing Cloud Editor in Eclipse,"Closing the ""Cloud Editor"" in Eclipse causes that sometimes an exception is thrown and reported in the Error Log:    {noformat}  Error disposing widget for : org.eclipse.e4.ui.model.application.ui.basic.impl.PartImpl Clover Coverage Cloud Report      java.lang.NullPointerException    org.eclipse.swt.custom.CTabFolderLayout.computeSize(CTabFolderLayout.java:39)    org.eclipse.swt.widgets.Composite.computeSize(Composite.java:234)    org.eclipse.swt.layout.GridData.computeSize(GridData.java:491)    org.eclipse.swt.layout.GridLayout.layout(GridLayout.java:221)    org.eclipse.swt.layout.GridLayout.layout(GridLayout.java:197)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1290)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1276)    org.eclipse.swt.widgets.Composite.layout(Composite.java:665)    org.eclipse.swt.custom.CTabFolder.runUpdate(CTabFolder.java:3755)    org.eclipse.swt.custom.CTabItem.getBounds(CTabItem.java:149)    org.eclipse.swt.custom.CTabFolder.onPaint(CTabFolder.java:1993)    org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:289)    org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)    org.eclipse.swt.widgets.Display.sendEvent(Display.java:4353)    org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1061)    org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1085)    org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1070)    org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:1491)    org.eclipse.swt.widgets.Control.windowProc(Control.java:4667)    org.eclipse.swt.widgets.Display.windowProc(Display.java:5036)    org.eclipse.swt.internal.win32.OS.VtblCall(Native Method)    org.eclipse.swt.internal.ole.win32.IOleInPlaceObject.InPlaceDeactivate(IOleInPlaceObject.java:21)  {noformat}    and     {noformat}  Unhandled event loop exception    java.lang.NullPointerException    org.eclipse.swt.custom.CTabFolderLayout.computeSize(CTabFolderLayout.java:39)    org.eclipse.swt.widgets.Composite.computeSize(Composite.java:234)    org.eclipse.swt.layout.GridData.computeSize(GridData.java:491)    org.eclipse.swt.layout.GridLayout.layout(GridLayout.java:221)    org.eclipse.swt.layout.GridLayout.layout(GridLayout.java:197)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1290)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1297)    org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1276)    org.eclipse.swt.widgets.Composite.setLayoutDeferred(Composite.java:1087)    org.eclipse.swt.widgets.Display.runDeferredLayouts(Display.java:4196)    org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)    org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1151)    org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)    org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1032)    org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:148)    org.eclipse.ui.internal.Workbench$5.run(Workbench.java:636)  {noformat}      Apparently, it fails in the CTabFolderLayout.computeSize() method:    {code:java}  protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache) {      CTabFolder folder = (CTabFolder)composite;      CTabFolderRenderer renderer = folder.renderer;      ...      tabW = Math.max(tabW, renderer.computeSize(width, 2, gc, -1, -1).x);  {code}    the 'renderer' is null. This renderer is being set in CTabFolder.init() method and set to null in the CTabFolder.onDispose() method.     It *may* be related with the:     CloudEditor.dispose() which calls removeCoverageChangeListener after the super.dispose()  so a refresh event may come in the meantinme    or    CloudEditor.createPages() which ""hacks"" the container layout by changing it from FillLayout to GridLayout.",3,1.9616811
CLOV-1617,Automatic Clover integration does not work for <groovyc> task,"*Problem:*    Automatic Clover integration in Bamboo does now work for Ant Tasks containing the <groovyc> task.    *Root cause:*    When automatic Clover integration is enabled in Bamboo, it uses Clover's AntIntegrationListener:    {noformat}  ant ... -lib clover.jar -listener com.atlassian.clover.ci.AntIntegrationListener  {noformat}    This listener listens to Ant's build events and intercepts Ant tasks such as:    <javac>, <java>, <javadoc>, <junit>    However, it does not intercept the <groovyc> one.     Integration with <groovyc> task is performed by the <clover-setup> task, which calls:    {code:java}  GroovycSupport.ensureAddedTo(antProject);  {code}    Note that GroovycSupport implements Ant's BuildListener. However, it cannot be passed via command line, like this:    {noformat}  ant ... -lib clover.jar -listener com.atlassian.clover.ant.groovy.GroovycSupport  {noformat}    because the GroovycSupport does not have a default constructor.     *Workaround:*    Call the <clover-setup> from an Ant script. For example, add the following target:    {code:xml}  <target name=""instrument"" if=""with.clover"">          <!-- we assume that automatic integration is enabled, which adds the '-lib clover.jar' -->          <taskdef name=""clover-setup"" classname=""com.atlassian.clover.ant.tasks.CloverSetupTask""/> <!-- from the clover.jar -->            <!-- call clover-setup to intercept <groovyc> task -->          <clover-setup/>            <!-- This fake compilation is to cheat the automatic Clover integration, so that it won't display the               ""Clover reports not being generated. No Clover instrumentation was done."" error message.               We instrument java sources, but through the <groovyc> task; and we need to trick Clover so that it               generates an HTML report at the end. -->          <mkdir dir=""${target.classes}""/>          <javac failonerror=""false"" srcdir=""${src.java}"" excludes=""**/*"" destdir=""${target.classes}""/>  </target>    <target name=""compile"" depends=""instrument"">          <groovyc destdir=""${target.classes}"" classpathref=""build.classpath"" fork=""yes"">              <javac source=""1.7"" target=""1.7"" debug=""on"" encoding=""UTF8"">              </javac>              <src path=""${src.java}""/>              <src path=""${src.groovy}""/>          </groovyc>  </target>  {code}    Clover's initialization will occur only if '-Dwith.clover=true' is set. Therefore, modify the Ant Task in Bamboo, for instance:    {noformat}  clean test -Dwith.clover=true  {noformat}    *Possible fixes:*    1) Add default constructor for GroovycSupport. Pass it as a second '-listener' to ant command in Bamboo.    2) Change the AntIntegrationListener so that it will intercept all <groovyc> tasks as well.  ",5,2.2817352
CLOV-1632,Protect against deployment of instrumented code,"If user calls ""mvn clover2:setup install"" or ""mvn clover2:setup deploy"", code instrumented by Clover will be installed to ~/.m2 or deployed to a repository.     This may be not a desired behavior, especially if developer is not aware of it (for instance if someone switches on the automatic Clover integration in Bamboo).    Furthermore, installation may occur not only for ""install"" or ""deploy"" phases expressed explicitly in the command line, but it can also happen when a plug-in runs such life cycle (mvn release:perform for instance).     Implement a protection against it - in the clover2:setup check the reactor which phases are about to run and refuse code instrumentation if 'install' or 'deploy' will be called.    This protection shall not be enabled by default, because there may be actually a need to install instrumented code (for instance - multiple build plans using the same local m2 cache or repository to fetch compiled artifacts and we want to measure coverage for all modules).    Enable protection by a flag. e.g.    {code:xml}  <configuration>    <repositoryPollutionProtection>true</repositoryPollutionProtection>  </configuration>  {code}    mvn -Dmaven.clover.repositoryPollutionProtection=true    Expected behavior: fail a build if repositoryPollutionProtection=true and build lifecycle contains 'install' or 'deploy' phases.    *Extra:*    Fail also if artifact contains a custom classifier and clover2:instrument is used (as Maven cannot handle an artifact with two classifiers).",3,2.6209414
CLOV-1644,Set up developmment environment for Stash,probably on Linux VM,2,1.8849441
CLOV-1654,as a plugin developer I'd like to have annotations for a package in a Clover database,"Currently, annotations are available for classes and methods only:   * ClassInfo.getModifiers().getAnnotations()   * MethodInfo.getSignature().getAnnotations()    There's nothing like PackageInfo.getAnnotations().     The reason to have this is that _package-info.java_ files may contain annotations (but no executable code). While having this adds no value for Clover instrumentation itself, it could be useful for plugin developers, who would like to read Clover database directly.     For instance, this information could be used to filter classes based on the information stored on a package level. See: https://answers.atlassian.com/questions/12781852/how-to-read-package-annotations-from-clover-db  ",5,2.6096523
CLOV-1657,Compiling Groovy code with Clover throws NPE,Clover fails to integrate with Groovyc task and throws NPE:    {noformat}  Clover failed to integrate with <groovyc/>  java.lang.NullPointerException  at com.atlassian.clover.ant.groovy.GroovycSupport.buildTestDetector(GroovycSupport.java:242)  at com.atlassian.clover.ant.groovy.GroovycSupport.taskStarted(GroovycSupport.java:141)  at org.apache.tools.ant.Project.fireTaskStarted(Project.java:2184)  at org.apache.tools.ant.Task.perform(Task.java:344)  at org.apache.tools.ant.Target.execute(Target.java:392)  at org.apache.tools.ant.Target.performTasks(Target.java:413)  at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)  ...  {noformat}    *Cause:*    NPE is thrown when Clover cannot find it's AntInstrumentationConfig in project references in an Ant-based build. This can happen when a build calls <ant> or <antcall> tasks without {{inheritrefs=true}} - lack of this property causes that AntInstrumentationConfig is not passed to these calls.    *Workaround:*    Ensure that  {{inheritrefs=true}} is used.   ,1,2.5647757
CLOV-1658,Publish Clover-for-Scala prototype,"Tasks:   * request releasing it as open source   * publish plugin's source code on BitBucket,    * prepare and publish documentation on CAC/Clover-for-Scala.    * prepare plug-in developer documentation",5,2.1272757
CLOV-1659,as a user I want to use Clover with maven-scala-plugin,"Integration of Clover-for-Scala with the maven-scala-plugin.     Tasks:   * clover2:setup shall ""connect"" to the maven-scala-plugin; t.b.d. how - META-INF/services? a plugin point? some properties?   * clover2:clover shall include also *.scala sources    Checks:   * is it possible to have joint Scala-Java compilation (like with joint Groovy-Java)?    Out of scope:   * clover2:instr is out of scope as integration is performed using AST, not source code   * clover2:optimize as test optimization is in another task  ",13,2.8470018
CLOV-1660,as a user I want to use Clover with scalac ,"Integration of Clover-for-Scala with scalac command line tool.    Tasks:   * shall be easy - plugging via META-INF/services    Checks:   * is it possible to have joint Scala-Java compilation? if yes, then how it works and how to intercept both compilers?  ",5,2.5137944
CLOV-1661,as a user I want to use Clover with SBT,"Integration of Clover-for-Scala with SBT.    Tasks:   * write build plugin for SBT - equivalent of clover2:setup, shall intercept any scalac calls; shall add clover.jar (clover-scala.jar?) to class paths for compilation and runtime   * write build plugin for SBT - equivalent of clover2:clover, shall generate reports; we may call Clover-for-Ant under the hood    ",20,2.3115704
CLOV-1662,as a user I want to see nested functions in reports,"Scala allows to nest functions inside other functions. Enhance existing HTML / XML / JSON reports in such way that we could see such nesting as well.     Some of the required functionality has already been done during implementation of lambda functions for Java 8 (Clover 3.2). Review if all possible nesting combinations are implemented in Velocity templates (method-in-method, class-in-method etc). Affects: table with list of methods for a class, calculation of metrics etc.",5,2.4606616
CLOV-1663,as a user I want to see for Scala exact code coverage highlighting in an HTML report,"As in Scala we may have a lot of statements in a single source line, it would be very valuable to have coverage highlighting not for a single line, but for a single character in HTML reports. Similarly as we have for Eclipse and IDEA.    See this issue: ",8,2.3346066
CLOV-1664,as a user I want to use Clover-for-Scala in IntelliJ IDEA,Tasks:   * integrate with Scala complier in IDEA (using external build process)   * show Scala classes in Cloverage view   * show coverage highlighting in Scala editors    (!) Challenge: simultaneous update of clover.db by Javac and Scalac (similar problem as for Groovy in IDE)    Out of scope:   * test optimization for Scala,40,2.0585942
CLOV-1665,as a user I want to use Clover-for-Scala in Eclipse,Integration of Clover-for-Scala with Eclipse.    Tasks:   * plug into *.scala text editors   * show scala classes in the 'Coverage Explorer'    * intercept compilation of Scala code    (!) Challenge: simultaneous updates of clover.db by Scalac and Javac (similarly as for Groovy in IDE)    Out of scope:   * test optimization for Scala,40,2.4919033
CLOV-1666,as a user I want to run test optimization for Scala tests,It should be possible to perform test optimization for Scala test classes.     Integrations:   * Ant (?)   * Maven   * SBT   * IDEA (?)   * Eclipse (?)  ,40,2.803374
CLOV-1667,as a user I want to see smart names for classes and functions in reports,"The point is that Scala code is being translated to a bytecode containing various ""cryptic"" names.     For instance, ""overloaded operators"" have ""$op"" in method's name.     Think how to reasonably represent methods, functions, inline classes, anonymous functions, case classes, traits etc etc in HTML report at least (XML / JSON are less important).   ",20,2.4553254
CLOV-1668,"Clover installs instrumented-jars in local Maven repo, in place of non-instrument ones","I'm not sure if this has been reintroduced or something else is wrong, since the CLOVKB claims it is not the case: https://confluence.atlassian.com/display/CLOVERKB/Maven+is+deploying+instrumented+jars  (I _am_ using the {{instrument}} goal - followed by {{log}} and {{check}})  In the below, you can see that, e.g., {{target/clover/magnolia-module-diff-1.7-SNAPSHOT-clover-tests.jar}} gets copied to {{.../magnolia-module-diff-1.7-SNAPSHOT-tests.jar}} (without {{-clover}} qualifier!)    This seems to happen for ~all artifacts except the ""main"" jar. (test jar, assemblies, etc..).    In this case, the situation is saved by the ""real"" install plugin that gets executed later and overwrites those wrong artifacts. However, if we use the (newish) {{installAtEnd}} feature of the {{maven-install-plugin}}, then this doesn't happen, and we end up with instrumented jars in place of the non-instrumented ones, which has tons of ugly consequences. See for yourself with the snippet:{code:xml}    <build>      <pluginManagement>        <plugins>          <plugin>            <groupId>org.apache.maven.plugins</groupId>            <artifactId>maven-install-plugin</artifactId>            <configuration>              <installAtEnd>false</installAtEnd>            </configuration>          </plugin>        </plugins>      </pluginManagement>    </build>  {code}    Why is Clover installing anything, anyway ? Shouldn't it just _attach_ the instrumented jars (and only those) to the build, and let Maven do the rest ?    {noformat}  [INFO] --- maven-clover2-plugin:4.0.2:check (instrument-and-check) @ magnolia-module-diff ---  [INFO]   [INFO] --- maven-install-plugin:2.5.2:install (default-install) @ magnolia-module-diff ---  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/target/clover/magnolia-module-diff-1.7-SNAPSHOT-clover.jar to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT-clover.jar  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/pom.xml to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT.pom  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/target/magnolia-module-diff-1.7-SNAPSHOT-bundle.zip to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT-bundle.zip  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/target/magnolia-module-diff-1.7-SNAPSHOT-bundle.tar.gz to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT-bundle.tar.gz  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/target/magnolia-module-diff-1.7-SNAPSHOT-tests.jar to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT-tests.jar  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/target/clover/magnolia-module-diff-1.7-SNAPSHOT-clover-bundle.zip to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT-bundle.zip  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/target/clover/magnolia-module-diff-1.7-SNAPSHOT-clover-bundle.tar.gz to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT-bundle.tar.gz  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/target/clover/magnolia-module-diff-1.7-SNAPSHOT-clover-tests.jar to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT-tests.jar  [INFO]   [INFO] <<< maven-clover2-plugin:4.0.2:instrument (instrument-and-check) < [clover]install @ magnolia-module-diff <<<  [INFO]   [INFO] --- maven-clover2-plugin:4.0.2:instrument (instrument-and-check) @ magnolia-module-diff ---  [INFO]   [INFO] --- maven-clover2-plugin:4.0.2:log (instrument-and-check) @ magnolia-module-diff ---  [INFO] Clover Version 4.0.2, built on October 13 2014 (build-943)    [...]    [INFO] Coverage check PASSED  [INFO]   [INFO] --- maven-install-plugin:2.5.2:install (default-install) @ magnolia-module-diff ---  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/target/magnolia-module-diff-1.7-SNAPSHOT.jar to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT.jar  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/pom.xml to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT.pom  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/target/magnolia-module-diff-1.7-SNAPSHOT-bundle.zip to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT-bundle.zip  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/target/magnolia-module-diff-1.7-SNAPSHOT-bundle.tar.gz to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT-bundle.tar.gz  [INFO] Installing /Users/gjoseph/Dev/magnolia/git/enterprise/diff/target/magnolia-module-diff-1.7-SNAPSHOT-tests.jar to /Users/gjoseph/.m2/repository/info/magnolia/magnolia-module-diff/1.7-SNAPSHOT/magnolia-module-diff-1.7-SNAPSHOT-tests.jar  [INFO] ------------------------------------------------------------------------  [INFO] BUILD SUCCESS  [INFO] ------------------------------------------------------------------------    {noformat}",1,2.3475447
CLOV-1672,Ensure that Clover JAR is readable by Ant 1.9.0-1.9.1,"Ant 1.9.0/1.9.1 have a bug related with zip64 file handling:    _central directory zip64 extended information extra field's length doesn't match central directory data. Expected length 0 but is 16_    While this bug has been fixed in Ant 1.9.2, it should be still possible to produce such Clover JAR file that it will be readable by buggy Ant versions as well.     Ensure that new Clover 4.0.5 (and further versions) will be compatible.",3,1.7039344
CLOV-1675,"Grails Clover Plugin compatibility with Grails 2.4.5, 2.5.0",New Grails versions have been released recently:   * 2.4.5 		24/Mar/15   * 2.5 		24/Mar/15    Make Grails Clover Plugin compatible with them.,5,1.5662136
CLOV-1679,MavenIntegrator shall not add arguments if they are already present in original command,"This applies to:   * build phases    * Clover's properties    Current problems:    1) The ""clean"" phase can be doubled    For example if original command has:  {noformat}  mvn clean test  {noformat}    it becomes:    {noformat}  mvn clean clean clover2:setup test clover2:aggregate clover2:clover ...  {noformat}    2) User cannot override default values of Clover properties    For example if a property is already defined:    {noformat}  mvn test -Dmaven.clover.licenseLocation=/my/clover.license  {noformat}    MavenIntegrator adds a second one with it's own value:    {noformat}  mvn test -Dmaven.clover.licenseLocation=/my/clover.license -Dmaven.clover.licenseLocation=/tmp/clover.license  {noformat}    ",1,2.3353107
CLOV-1682,Repository pollution protection reports a custom classifier under Maven 2.2.x,"*Problem:*    Probably bug in Maven, needs further investigation.     Running ""clean clover2:instrument"" on a simple project (no additional plugins) with repository pollution protection enabled causes a build failure.    {noformat}  maven-clover2-plugin-hg\src\it\pollutionProtection>mvn clean clover2:instrument  -Dmaven.clover.repositoryPollutionProtection=true  [INFO] Scanning for projects...  [INFO] snapshot com.atlassian.maven.plugins:maven-clover2-plugin:4.0.4-SNAPSHOT: checking for updates from atlassian-internal  [INFO] ------------------------------------------------------------------------  [INFO] Building Unnamed - com.atlassian.maven.plugins.sample:clover-pollution-protection:jar:1.0-SNAPSHOT  [INFO]    task-segment: [clean, clover2:instrument]  [INFO] ------------------------------------------------------------------------  [INFO] [clean:clean {execution: default-clean}]  [INFO] Deleting directory f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target  [INFO] Preparing clover2:instrument  [INFO] snapshot com.atlassian.clover:clover:4.0.4-SNAPSHOT: checking for updates from atlassian-internal  [INFO] [clover2:instrumentInternal {execution: default-instrumentInternal}]  [INFO] ------------------------------------------------------------------------  [ERROR] BUILD ERROR  [INFO] ------------------------------------------------------------------------  [INFO] Clover's repository pollution protection is enabled. Your build produces an artifact (com.atlassian.maven.plugins.sample:clover-pollution-protection:jar:tests:1.0-SNAPSHOT) with a custom classi  fier. As Maven does not support multiple classifiers for an artifact, appending second 'clover' classifier may not be handled correctly. You can:   - remove a custom classifier or   - configure Clover to not append the '-clover' classifier  to fix it. You can also disable pollution protection (-Dmaven.clover.repositoryPollutionProtection=false) if you know that it doesn't affect your build.  {noformat}    Adding extra logging showed that it fails because a custom 'tests' classifier is used during a build - see XXXXXXXXXX below.     {noformat}  maven-clover2-plugin-hg\src\it\pollutionProtection>mvn clean clover2:instrument    [INFO] Scanning for projects...  [INFO] snapshot com.atlassian.maven.plugins:maven-clover2-plugin:4.0.4-SNAPSHOT: checking for updates from atlassian-internal  [INFO] ------------------------------------------------------------------------  [INFO] Building Unnamed - com.atlassian.maven.plugins.sample:clover-pollution-protection:jar:1.0-SNAPSHOT  [INFO]    task-segment: [clean, clover2:instrument]  [INFO] ------------------------------------------------------------------------  [INFO] [clean:clean {execution: default-clean}]  [INFO] Preparing clover2:instrument  [INFO] snapshot com.atlassian.clover:clover:4.0.4-SNAPSHOT: checking for updates from atlassian-internal  [INFO] [clover2:instrumentInternal {execution: default-instrumentInternal}]  [INFO] XXXXXXXXXX CLASSIFIER= com.atlassian.maven.plugins.sample:clover-pollution-protection:jar:tests:1.0-SNAPSHOT  [INFO] Clover Version 4.0.4, built on April 15 2015 (build-dev)  [INFO] Loaded from: d:\Data\.m2\repository\com\atlassian\clover\clover\4.0.4-SNAPSHOT\clover-4.0.4-SNAPSHOT.jar  [INFO] Clover: Developer License registered to Atlassian.  [INFO] Creating new database at 'f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\clover\clover.db'.  [INFO] Processing files at 1.8 source level.  [INFO] Clover all over. Instrumented 1 file (1 package).  [INFO] Elapsed time = 0,077 secs. (12,987 files/sec, 64,935 srclines/sec)  [INFO] Clover Version 4.0.4, built on April 15 2015 (build-dev)  [INFO] Loaded from: d:\Data\.m2\repository\com\atlassian\clover\clover\4.0.4-SNAPSHOT\clover-4.0.4-SNAPSHOT.jar  [INFO] Clover: Developer License registered to Atlassian.  [INFO] Updating existing database at 'f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\clover\clover.db'.  [INFO] Processing files at 1.8 source level.  [INFO] Clover all over. Instrumented 1 file (1 package).  [INFO] 1 test method detected.  [INFO] Elapsed time = 0,016 secs. (62,5 files/sec, 562,5 srclines/sec)  [INFO] [resources:resources {execution: default-resources}]  [WARNING] Using platform encoding (Cp1250 actually) to copy filtered resources, i.e. build is platform dependent!  [INFO] skip non existing resourceDirectory f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\src\main\resources  [INFO] Copying 1 resource  [INFO] [compiler:compile {execution: default-compile}]  [INFO] Compiling 1 source file to f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\clover\classes  [INFO] [resources:testResources {execution: default-testResources}]  [WARNING] Using platform encoding (Cp1250 actually) to copy filtered resources, i.e. build is platform dependent!  [INFO] skip non existing resourceDirectory f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\src\test\resources  [INFO] [compiler:testCompile {execution: default-testCompile}]  [INFO] Compiling 1 source file to f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\clover\test-classes  [INFO] [surefire:test {execution: default-test}]  [INFO] Surefire report directory: f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\clover\surefire-reports    -------------------------------------------------------   T E S T S  -------------------------------------------------------  Running ATest  Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.168 sec    Results :    Tests run: 1, Failures: 0, Errors: 0, Skipped: 0    [INFO] [jar:jar {execution: default-jar}]  [INFO] Building jar: f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\clover\clover-pollution-protection-1.0-SNAPSHOT-clover.jar  [INFO] [install:install {execution: default-install}]  [INFO] Installing f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\clover\clover-pollution-protection-1.0-SNAPSHOT-clover.jar to d:\Data\.m2\repository\com\atlassian\maven\plugins\sam  ple\clover-pollution-protection\1.0-SNAPSHOT\clover-pollution-protection-1.0-SNAPSHOT-clover.jar  [INFO] [clover2:instrument {execution: default-cli}]  [INFO] XXXXXXXXXX CLASSIFIER= com.atlassian.maven.plugins.sample:clover-pollution-protection:jar:1.0-SNAPSHOT  [INFO] ------------------------------------------------------------------------  [INFO] BUILD SUCCESSFUL  [INFO] ------------------------------------------------------------------------  {noformat}    What's interesting, running the same test but with clover2:setup not only does not fails a build (because repository pollution protection does not fail due to custom classifier if no 'clover' is used), but the artifact produced does NOT have the 'tests' classifier:    {noformat}  maven-clover2-plugin-hg\src\it\pollutionProtection>mvn clean clover2:setup verify   [INFO] Scanning for projects...  [INFO] snapshot com.atlassian.maven.plugins:maven-clover2-plugin:4.0.4-SNAPSHOT: checking for updates from atlassian-internal  [INFO] ------------------------------------------------------------------------  [INFO] Building Unnamed - com.atlassian.maven.plugins.sample:clover-pollution-protection:jar:1.0-SNAPSHOT  [INFO]    task-segment: [clean, clover2:setup, verify]  [INFO] ------------------------------------------------------------------------  [INFO] [clean:clean {execution: default-clean}]  [INFO] Deleting directory f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target  [INFO] snapshot com.atlassian.clover:clover:4.0.4-SNAPSHOT: checking for updates from atlassian-internal  [INFO] [clover2:setup {execution: default-cli}]  [INFO] XXXXXXXXXX CLASSIFIER= com.atlassian.maven.plugins.sample:clover-pollution-protection:jar:1.0-SNAPSHOT  [INFO] Clover Version 4.0.4, built on April 15 2015 (build-dev)  [INFO] Loaded from: d:\Data\.m2\repository\com\atlassian\clover\clover\4.0.4-SNAPSHOT\clover-4.0.4-SNAPSHOT.jar  [INFO] Clover: Developer License registered to Atlassian.  [INFO] Creating new database at 'f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\clover\clover.db'.  [INFO] Processing files at 1.8 source level.  [INFO] Clover all over. Instrumented 1 file (1 package).  [INFO] Elapsed time = 0,057 secs. (17,544 files/sec, 87,719 srclines/sec)  [INFO] Clover Version 4.0.4, built on April 15 2015 (build-dev)  [INFO] Loaded from: d:\Data\.m2\repository\com\atlassian\clover\clover\4.0.4-SNAPSHOT\clover-4.0.4-SNAPSHOT.jar  [INFO] Clover: Developer License registered to Atlassian.  [INFO] Updating existing database at 'f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\clover\clover.db'.  [INFO] Processing files at 1.8 source level.  [INFO] Clover all over. Instrumented 1 file (1 package).  [INFO] 1 test method detected.  [INFO] Elapsed time = 0,011 secs. (90,909 files/sec, 818,182 srclines/sec)  [INFO] [resources:resources {execution: default-resources}]  [WARNING] Using platform encoding (Cp1250 actually) to copy filtered resources, i.e. build is platform dependent!  [INFO] skip non existing resourceDirectory f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\src\main\resources  [INFO] Copying 1 resource  [INFO] [compiler:compile {execution: default-compile}]  [INFO] Compiling 1 source file to f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\classes  [INFO] [resources:testResources {execution: default-testResources}]  [WARNING] Using platform encoding (Cp1250 actually) to copy filtered resources, i.e. build is platform dependent!  [INFO] skip non existing resourceDirectory f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\src\test\resources  [INFO] [compiler:testCompile {execution: default-testCompile}]  [INFO] Compiling 1 source file to f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\test-classes  [INFO] [surefire:test {execution: default-test}]  [INFO] Surefire report directory: f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\surefire-reports    -------------------------------------------------------   T E S T S  -------------------------------------------------------  Running ATest  Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.155 sec    Results :    Tests run: 1, Failures: 0, Errors: 0, Skipped: 0    [INFO] [jar:jar {execution: default-jar}]  [INFO] Building jar: f:\Work\maven-clover2-plugin-hg\src\it\pollutionProtection\target\clover-pollution-protection-1.0-SNAPSHOT.jar  [INFO] ------------------------------------------------------------------------  [INFO] BUILD SUCCESSFUL  [INFO] ------------------------------------------------------------------------  {noformat}      It affects Maven 2.2.x. Does not occur in Maven 2.1.x or Maven 3.x.     Summarizing, it seems that forking a parallel build life cycle causes that an artefact's classifier changes from empty to 'tests':    * with clover2:instrument:    {noformat}  [INFO] [clover2:instrumentInternal {execution: default-instrumentInternal}]  [INFO] XXXXXXXXXX CLASSIFIER= com.atlassian.maven.plugins.sample:clover-pollution-protection:jar:tests:1.0-SNAPSHOT  ...  [INFO] [clover2:instrument {execution: default-cli}]  [INFO] XXXXXXXXXX CLASSIFIER= com.atlassian.maven.plugins.sample:clover-pollution-protection:jar:1.0-SNAPSHOT  {noformat}    * with clover2:setup:    {noformat}  [INFO] [clover2:setup {execution: default-cli}]  [INFO] XXXXXXXXXX CLASSIFIER= com.atlassian.maven.plugins.sample:clover-pollution-protection:jar:1.0-SNAPSHOT  {noformat}      *Workaround:*   * use clover2:setup instead of clover2:instrument to avoid forking life cycle or   * use different Maven version or   * disable the protection  ",3,1.9254142
CLOV-1683,Grails Clover Plugin compatibility with Grails 3.x,"Grails 3 has been released (3.0 GA on 31/Mar/15). It uses the Gradle build tool instead of Gant, thus we may need to have Gradle support as well. It has also various changes in API. Implement support for Grails 3 in the Grails Clover Plugin. ",5,1.9962549
CLOV-1743,OutOfMemoryError while flushing coverage data,"  {noformat}  29-May-2015 12:53:08 	ERROR: java.lang.OutOfMemoryError flushing coverage for recorder /media/ephemeral0/bamboo-working-dir/BAM-CLOVER344-UT/components/bamboo-core/target/clover/clover.dbbjv36u_ia9lwdsf: Java heap space  29-May-2015 12:53:08 	Exception in thread ""CloverFlushThread"" java.lang.OutOfMemoryError: Java heap space  29-May-2015 12:53:08 	        at java.util.zip.DeflaterOutputStream.<init>(DeflaterOutputStream.java:56)  29-May-2015 12:53:08 	        at com.cenqua.clover.util.FileUtils.createDeflateOutputStream(FileUtils.java:468)  29-May-2015 12:53:08 	        at com.cenqua.clover.FileBasedGlobalCoverageRecording.write(FileBasedGlobalCoverageRecording.java:39)  29-May-2015 12:53:08 	        at com.cenqua.clover.GlobalRecordingWriteStrategy$1.write(GlobalRecordingWriteStrategy.java:9)  29-May-2015 12:53:08 	        at com.cenqua.clover.BaseCoverageRecorder.write(BaseCoverageRecorder.java:108)  29-May-2015 12:53:08 	        at com.cenqua.clover.FixedSizeCoverageRecorder.write(FixedSizeCoverageRecorder.java:56)  29-May-2015 12:53:08 	        at com.cenqua.clover.BaseCoverageRecorder.flush(BaseCoverageRecorder.java:302)  29-May-2015 12:53:08 	        at com.cenqua.clover.BaseCoverageRecorder.flush(BaseCoverageRecorder.java:271)  29-May-2015 12:53:08 	        at com.cenqua.clover.BaseCoverageRecorder$CloverFlushThread.run(BaseCoverageRecorder.java:155)  29-May-2015 12:55:48 	ERROR: java.lang.OutOfMemoryError flushing coverage for recorder /media/ephemeral0/bamboo-working-dir/BAM-CLOVER344-UT/components/bamboo-core/target/clover/clover.dbdozy2b_ia9lwcia: Java heap space  29-May-2015 12:55:48 	Exception in thread ""CloverFlushThread"" java.lang.OutOfMemoryError: Java heap space  29-May-2015 12:56:03 	ERROR: java.lang.OutOfMemoryError flushing coverage for recorder /media/ephemeral0/bamboo-working-dir/BAM-CLOVER344-UT/components/bamboo-api/target/clover/clover.dbjcsfjm_ia9lwcij: Java heap space  29-May-2015 12:56:03 	Exception in thread ""CloverFlushThread"" java.lang.OutOfMemoryError: Java heap space  {noformat}  ",2,2.0848262
CLOV-1752,Drop support for IDEA versions older than 11.0.0,,2,1.810063
CLOV-1757,Make Clover compatible with IntelliJ 15,,8,1.9664484
CLOV-1758,Support JDK9 by Clover,"* As per https://adtmag.com/articles/2015/05/08/oracle-java.aspx     we can expect to have the ""feature complete"" version before December, 2015.    Clover should be ready till then.",20,2.1387236
CLOV-1761,Add support for Eclipse Mars 4.5 version,Add support for new Eclipse Mars (June 2015)     https://adtmag.com/articles/2015/06/30/eclipse-release-train.aspx,1,1.61425
CLOV-1766,Eclipse Mars 4.5 does not load platform:/ resources properly,"Clover uses ""platform:/"" URIs to load standard Eclipse icons from eclipse-core such as a package icon, a folder icon etc.     Eclipse Mars is buggy and does not always fetch these resources, as a consequence we don't see proper icons on a toolbar.    Fix: bundle new icons in Clover-for-Eclipse plugin and replace ""platform:/"" references by new icons using local URIs.    Note: try aligning look of new icons with ADG and Clover's HTML reports.",2,1.7847317
CLOV-1771,AspectJ spike,,3,2.081036
CLOV-1775,Rename maven-clover2-plugin artifactId to clover-maven-plugin,"{panel:title=Decision|titleBGColor=#205081|bgColor=#59afe1}  We are currently working on renaming Maven Clover2 Plugin according to the naming convention recommended by the Apache Maven project.    Due to a fact that this is a major breaking change, forcing customers to modify their POMs, CI build plans etc, it will be done in the nearest major Clover release (currently planned for end of 2015) and appropriate migration guides will be prepared.    New plugin name will be: *clover-maven-plugin*  {panel}    *Problem reported:*    According the Maven's Plugin Naming Convention, Clover's plugin artifactID violates the Apache Maven Trademark. The artifactId should be clover2-maven-plugin. I would even suggest removing the 2 from the artifactId.    [Plugin Naming Convention and Apache Maven Trademark|https://maven.apache.org/guides/plugin/guide-java-plugin-development.html]      *Scope of the change:*    _Before release_     (/) investigate if we can use clover-maven-plugin or must use cloverX-maven-plugin - _will be renamed to clover-maven-plugin_    (/) decide if major Clover release will be numbered 4.1.0 -or 5.0.0- (as per [Semantic Versioning|http://semver.org])   (/) prepare migration message in maven-clover2-plugin pom.xml for versions 4.0.x, similarly as it was done for Clover Core (com.cenqua.clover:clover:3.3.0) - _message added in pom in 4.0.6_   (/) rename maven-clover2-plugin artifactId for 4.1.0 / -5.0.0- , update integration tests   (/) prepare migration guide for Clover 4.1 / -5.0- Release Notes   (/) update Clover's Tutorial (Moneybags bundled in clover-ant.zip) -> see also CLOV-1827    _After release_    See CLOV-1828.",3,2.7872667
CLOV-1776,Instrumentation error on certain projects since 4.0.5 build of Clover. ,Instrumentation error on certain projects since 4.0.5 build of Clover.     Making it a blocker as we can't run Clover on certain projects any longer.     {code}  build	27-Jul-2015 13:46:14	[INFO] Processing files at 1.8 source level.  build	27-Jul-2015 13:46:17	[INFO] Instrumentation error  build	27-Jul-2015 13:46:17	java.util.NoSuchElementException  build	27-Jul-2015 13:46:17	  java.util.ArrayDeque.getFirst(ArrayDeque.java:324)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.headIdentifiersStack(JavaRecognizer.java:113)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.pushIdentifierToHeadStack(JavaRecognizer.java:109)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.primaryExpressionPart(JavaRecognizer.java:3368)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.postfixExpression(JavaRecognizer.java:5047)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.unaryExpressionNotPlusMinus(JavaRecognizer.java:5007)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.unaryExpression(JavaRecognizer.java:4867)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.multiplicativeExpression(JavaRecognizer.java:4817)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.additiveExpression(JavaRecognizer.java:4787)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.shiftExpression(JavaRecognizer.java:4754)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.relationalExpression(JavaRecognizer.java:4706)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.equalityExpression(JavaRecognizer.java:4673)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.andExpression(JavaRecognizer.java:4654)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.exclusiveOrExpression(JavaRecognizer.java:4635)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.inclusiveOrExpression(JavaRecognizer.java:4616)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.logicalAndExpression(JavaRecognizer.java:4597)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.logicalOrExpression(JavaRecognizer.java:4578)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.conditionalExpression(JavaRecognizer.java:4549)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.conditionalExpression2(JavaRecognizer.java:5558)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.annMemberValue2(JavaRecognizer.java:5528)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.annMemberValuePair(JavaRecognizer.java:5465)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.annotation2(JavaRecognizer.java:1509)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.annotation(JavaRecognizer.java:667)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.packageDefinition(JavaRecognizer.java:593)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.JavaRecognizer.compilationUnit(JavaRecognizer.java:540)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.Instrumenter.instrument(Instrumenter.java:212)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.instr.java.Instrumenter.instrument(Instrumenter.java:125)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.CloverInstr.execute(CloverInstr.java:76)  build	27-Jul-2015 13:46:17	  com.atlassian.clover.CloverInstr.mainImpl(CloverInstr.java:54)  build	27-Jul-2015 13:46:17	  com.atlassian.maven.plugin.clover.internal.instrumentation.AbstractInstrumenter.instrumentSources(AbstractInstrumenter.java:197)  build	27-Jul-2015 13:46:17	  com.atlassian.maven.plugin.clover.internal.instrumentation.AbstractInstrumenter.instrument(AbstractInstrumenter.java:72)  build	27-Jul-2015 13:46:17	  com.atlassian.maven.plugin.clover.CloverInstrumentInternalMojo.execute(CloverInstrumentInternalMojo.java:289)  build	27-Jul-2015 13:46:17	  com.atlassian.maven.plugin.clover.CloverSetupMojo.execute(CloverSetupMojo.java:31)  build	27-Jul-2015 13:46:17	  org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:132)  build	27-Jul-2015 13:46:17	  org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)  build	27-Jul-2015 13:46:17	  org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)  build	27-Jul-2015 13:46:17	  org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)  build	27-Jul-2015 13:46:17	  org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)  build	27-Jul-2015 13:46:17	  org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)  build	27-Jul-2015 13:46:17	  org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)  build	27-Jul-2015 13:46:17	  org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:120)  build	27-Jul-2015 13:46:17	  org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:347)  build	27-Jul-2015 13:46:17	  org.apache.maven.DefaultMaven.execute(DefaultMaven.java:154)  build	27-Jul-2015 13:46:17	  org.apache.maven.cli.MavenCli.execute(MavenCli.java:584)  build	27-Jul-2015 13:46:17	  org.apache.maven.cli.MavenCli.doMain(MavenCli.java:213)  build	27-Jul-2015 13:46:17	  org.apache.maven.cli.MavenCli.main(MavenCli.java:157)  build	27-Jul-2015 13:46:17	  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  build	27-Jul-2015 13:46:17	  sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)  build	27-Jul-2015 13:46:17	  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)  build	27-Jul-2015 13:46:17	  java.lang.reflect.Method.invoke(Method.java:483)  build	27-Jul-2015 13:46:17	  org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)  build	27-Jul-2015 13:46:17	  org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)  build	27-Jul-2015 13:46:17	  org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)  build	27-Jul-2015 13:46:17	  org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)  build	27-Jul-2015 13:46:17	[INFO]                                                                           {code},2,1.8069739
CLOV-1779,Groovy code with Generics throw NPEs,Starting with Clover version 4.0.1 when running JUnit tests against clover instrumented code I am getting a null pointer exception when attempting to call this method:    {code:java}  // in DateUtil.groovy    static <T extends Date> T copy(T date) {      (T) date?.clone()    }  {code}    It seems like something has changed with the instrumentation. Either of these two other variations of this same code *doesn't* have this problem:    {code:java}    static Date copy(Date date) {      date?.clone()    }      static def copy(def date) {      date?.clone()    }  {code}      Here's the top of the stacktrace:  {noformat}  java.lang.NullPointerException    com.sun.beans.TypeResolver.resolve(TypeResolver.java:203)    com.sun.beans.TypeResolver.resolve(TypeResolver.java:218)    com.sun.beans.TypeResolver.resolveInClass(TypeResolver.java:96)    java.beans.FeatureDescriptor.getParameterTypes(FeatureDescriptor.java:387)    java.beans.MethodDescriptor.setMethod(MethodDescriptor.java:116)    java.beans.MethodDescriptor.<init>(MethodDescriptor.java:72)    java.beans.MethodDescriptor.<init>(MethodDescriptor.java:56)    java.beans.Introspector.getTargetMethodInfo(Introspector.java:1205)    java.beans.Introspector.getBeanInfo(Introspector.java:426)    java.beans.Introspector.getBeanInfo(Introspector.java:173)    groovy.lang.MetaClassImpl$15.run(MetaClassImpl.java:3244)    java.security.AccessController.doPrivileged(Native Method)    groovy.lang.MetaClassImpl.addProperties(MetaClassImpl.java:3242)    groovy.lang.MetaClassImpl.initialize(MetaClassImpl.java:3225)    org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:222)    org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:253)    org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:255)    org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:859)    org.codehaus.groovy.runtime.callsite.CallSiteArray.createCallStaticSite(CallSiteArray.java:72)    org.codehaus.groovy.runtime.callsite.CallSiteArray.createCallSite(CallSiteArray.java:159)    org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)    org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)    org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)    com.surescripts.common.DateUtilTest.clone_NonNullValue(DateUtilTest.groovy:16)  {noformat},3,2.4774258
CLOV-1780,Add migration message in maven-clover2-plugin POM,"(/) investigate if we can use clover-maven-plugin or must use cloverX-maven-plugin -> it would be great to have just clover- instead of cloverX- to avoid changing a number in future  (?) decide if major Clover release will be numbered 4.1.0 or 5.0.0 (as per Semantic Versioning) -> it may affect whether it will be named clover4- or clover-5  (/) prepare migration message in maven-clover2-plugin pom.xml for versions 4.0.x, similarly as it was done for Clover Core (com.cenqua.clover:clover:3.3.0) -> deliver in Clover 4.0.6, 4.0.7, ...    to be considered:  (x) prepare a fork of the plugin and release under two names since 4.0.6?  (x) add an extra migration warning printed by the clover2:setup / clover2:instr goal?",2,2.4047043
CLOV-1784,Extend interfaces to manipulate test optimization,Interface to manipulate test optimization:  * to reorganize optimized test sets  * to manipulate content the test optimization snapshot file,2,2.7230127
CLOV-1785,Extend database format to handle statements and methods in a file,"Allow better modelling of file-level statements and methods so that we can better support languages like Ruby which support top-level scripting constructs.     Example:   {code:java}  session.enterFile(..);  session.enterMethod(...); // top-level-method, not inside a class  ...  // some statements  ...  session.exitMethod();  ...  session.addStatement(...); // top-level-statement, not inside a class or a method  ...  session.exitFile();  {code}    Some preparation have been already done for Java 8 (Clover 3.2).    Things to be checked:   * how our code calculates the start/end line/col range for a statement/method outside a class   * how it calculates code metrics for a file having top-level statements/methods   * how it handles exclusion filters (statement/method regexp)   * how it handles nested entities (method-in-method etc)    Things to be implemented:   * take into account these top-level statements/methods in reporting   ** show in XML / HTML / PDF / JSON   ** render lines   ** show in tables etc    Out of scope:   * test optimization    Note:  Looking at how Clojure is written, for any Clojure file there would only ever be one FileInfo containing lots of StatementInfos and MethodInfos but no ClassInfos.",3,2.1262858
CLOV-1787,Rename ClassInfo to TypeInfo,"ClassInfo is just OK for Java and Groovy (we have classes). But we also have enums, interfaces and annotations! And in other languages we also have closures (Groovy), traits (Groovy, Scala) etc. Thus the name ClassInfo does not suit well for other languages.       Rename ClassInfo to something better. TypeInfo might be better.",1,2.645021
CLOV-1788,Make session.enterClass() more language-independent,"Clean up InstrumentationSession.enterClass(..., boolean isInterface, boolean isEnum, boolean isAnnotation) so that it instead takes a LanguageConstruct to indicated what it is which is then embedded in ClassInfo. This divorces this part of the API from Java allowing us to model languages like Scala who have things like traits, singleton objects, etc.    This may require a separate LanguageConstruct-like type (TypeConstruct ?) as it will likely need to be smarter than LanguageConstruct and be able to answer some basic questions Clover may need to ask e.g.    {code:java}  if (!typeInfo.getConstruct().isAbstract(typeInfo)) { //Java interfaces and annotations are always abstract, Scala trait is sometimes abstract, ...  //include in the report  }  {code}    The example above is a bit fake because surely we could determine if a TypeInfo is abstract by traversing it but there may be situations where we need to ask similar questions.  ",3,2.1119328
CLOV-1789,Add possibility to add custom properties for code elements,"Introduce a base interface to ClassInfo, MethodInfo, PackageInfo, FileInfo, StatementInfo, BranchInfo which allows API clients to add arbitrary properties to the model. They values should be raw types, possible Serializable objects too. This should allow instrumentation providers better answer questions Clover may have about the model they've produced.    Something like:    interface CustomInfo   - getProperties(): Map<String, Object>   - setProperty(String, Object)   - getProperty(String)    interface FileInfo extends ..., CustomInfo  interface TypeInfo extends ..., CustomInfo  interface MethodInfo extends ..., CustomInfo  interface BranchInfo extends ..., CustomInfo  interface StatementInfo extends ..., CustomInfo  ",2,2.582308
CLOV-1790,Rename StatementInfo to ExpressionInfo,"Rename StatementInfo to ExpressionInfo in the API. Java is the odd one out here. Scala, Clojure etc all have expressions as there basic unit of execution. A statement is an expression with no result.   ",1,2.4692237
CLOV-1792,Drop classic HTML report,remove classic reports in Clover   * report type='classic' print error? or warning and ignore...   * remove old velocity templates   * drop libraries   ** Overlibvms  not until we drop Classic reports (Clover 4.1)   ** Utils.js (rewrite query parsing into clover.js)   ** sorttable.js,2,1.6872196
CLOV-1793,Drop Grails 1.3, * remove legacy code (if any),2,1.4764338
CLOV-1794,Drop Eclipse 3.6 and 3.7,* compile against eclipse 4.2  * fix deprecation warnings etc  * remove legacy code (if any)  * bump version numbers in feature name,1,1.7113621
CLOV-1795,Remove --style from Command line processors,{{--style}} argument has been deprecated in 4.1.0 it should be removed in next major version 4.2.0.  Scope: * remove HtmlReporter#Style * update docs i necessary * cleanup all TODO CLOV-1795,1,2.1882749
CLOV-1797,Support for IDEA 14.1.5,It should work but let's be sure.   http://blog.jetbrains.com/idea/2015/09/intellij-idea-14-1-5-update-is-out/,1,1.5301173
CLOV-1800,Walk AST and store file and type info in database,Walk the AST tree and handle FileInfo and ClassInfo (TypeInfo) elements - register them in Clover database. Print them in reports.  We shall handle Scala's class / object / trait types.  (including anonymous?) ,8,2.1295476
CLOV-1801,Walk AST and store method info in a database,Walk AST and register methods and functions (including inline / anonymous ones?) in a database. Print them in reports.     To be considered: naming convention.,8,1.9594234
CLOV-1802,Walk AST and store statement info in a database,,8,1.9471061
CLOV-1804,Add support for Eclipse Mars.1,Eclipse Mars.1 was released on 01.10. Make sure Clover is compatible by:    * smoke testing  * adding new version to Eclipse versions matrix. ,1,1.8330281
CLOV-1808,StringIndexOutOfBoundsException in CloverStartup.evaluateDaysLeft,Clover fails to decode the license key. Stacktrace:    {noformat}  Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 47   at java.lang.String.charAt(String.java:646)   at com.atlassian.clover.CloverStartup.evaluateDaysLeft(CloverStartup.java:334)   at com.atlassian.clover.CloverStartup.loadLicense(CloverStartup.java:122)   at com.atlassian.clover.CloverStartup.loadLicense(CloverStartup.java:26)   at com.atlassian.clover.CloverInstr.mainImpl(CloverInstr.java:45)   at com.atlassian.maven.plugin.clover.internal.instrumentation.AbstractInstrumenter.instrumentSources(AbstractInstrumenter.java:196)   at com.atlassian.maven.plugin.clover.internal.instrumentation.AbstractInstrumenter.instrument(AbstractInstrumenter.java:71)   at com.atlassian.maven.plugin.clover.CloverInstrumentInternalMojo.execute(CloverInstrumentInternalMojo.java:290)    at com.atlassian.maven.plugin.clover.CloverSetupMojo.execute(CloverSetupMojo.java:30)   at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager. java:134):  .. 11 more  {noformat}    ,1,2.1979375
CLOV-1817,Fix colors of test passed / failed / error icons in Eclipse,"Currently we use dark blue color for a failed test. It's not contrast enough compared to the green one.     Furthermore, we use a red background for a ""FAIL"" status label, which is not consistent. Also, a green background used for a ""PASS"" label is different from the green dot in the icon.     Current colors used: green-pass, blue-fail, red-error are the same as in Eclipse's JUnit view.    Consider also changing a dot to three different figures to make it accessible for color-blinded people. For instance:   * light green circle - pass   * dark blue triangle - fail   * red square - error  ",1,2.0012867
CLOV-1823,Test optimization in Eclipse Mars 4.5.1 keeps running one test,"Steps to reproduce:   * rebuild a project, clean database and optimization snapshot   * two times on 'run optimized' button, for the first time it runs all test, for the second time it runs one test (and should none)",1,1.8462756
CLOV-1824,Add IDEA 14.0.4 to a test matrix,"There are differences in app behaviour between IDEA 14.0.x and 14.1.x.     As we're testing Clover against 12.1.7 and 13.0.0, it'd be good to add also 12.0.4, 13.1.6, 14.0.4 to our test matrix.     This way we will cover IDEA 12.0, 12.1, 13.0, 13.1, 14.0 and 14.1.  ",1,2.0271208
CLOV-1825,Add more debug logging for clover2:aggregate,"Currently, it's not known why a project has no child databases and what user can do with it. ",1,2.0123124
CLOV-1827,Update Clover Tutorial, * use source=1.6 instead of 1.4   * download required JARs (build*.xml)   * do not require env.GROOVY_HOME set to 1.7   * rename 'test' to 'test.run'   * remove cloverjunitlib.xml   * convert unit tests to JUnit4   * simplify goals   * use clover-maven-plugin  ,1,2.005441
CLOV-1828,Rename maven-clover2-plugin to clover-maven-plugin (post-release tasks),"*Scope of the change:*  _Before release_  See CLOV-1775.  _After release_   (/) update documentation:   * (/) on confluence.atlassian.com,    * (/) docs.atlassian.com,   * (/) answers.atlassian.com (rename all references of maven-clover2-plugin),    * (?) add comments on stackoverflow -> not doing   * (!) update Bamboo Clover Plugin (automatic integration shall use new maven plugin) -> BAM-16590          tracked in CLOV-1859   * (/) check Hudson / Jenkins Clover Plugin if they have any references -> _no references_   * (/) update Clover Examples repository   optional (not doing):   * move repository to bitbucket.org/atlassian/clover-maven-plugin  ** note that bitbucket does not support redirects from old to new url - https://bitbucket.org/site/master/issues/6325/need-a-forwarder-option-for-renamed-repos   ** thus we'd have to a) clone the repo to new location, b) set old repo as read-only and add a notice in README, c) update URLs in pom.xml ",2,2.3172166
CLOV-1834,Instrumentation failure of an annotation inside the catch clause,"Clover is failing to instrument below section of java 7 code {code}         try         {             innerStream.close();         }         catch (@SuppressWarnings(""unused"") final IOException e)         {             // ignore          } {code} This is a perfectly valid java 7 syntax but clover instrumentation fails at @SuppressWarnings(""unused"") annotation. ",1,2.415999
CLOV-1835,Unicode 0x200B (zero-width whitespace) causes instrumentation failure,"JDK 6 implements Unicode 4.0. In this version of Unicode, the zero-width whitespace character (0x200B) is being treated as a whitespace.    JDK 7 implements Unicode 6.0. In this version of Unicode, the zero-width whitespace has been reclassified to the 'format character' group (other characters in this group are, for example, left-/right- text direction markers).    Thus, Java compiler in JDK 6 allows to use 0x200B as a normal whitespace character, e.g. separating symbols.     The Java compiler since JDK 7 silently ignores the 0x200B, which means that it cannot be used to separate symbols anymore. However you can put this character virtually in any place, e.g.:    {code:java}  void this<200B>Is<200B>MyMethod();  {code}    Clover fails on parsing the 200B character:    {noformat}  Xyz.java:287:90:unexpected char: 0x200B  at com.atlassian.clover.instr.java.Instrumenter.instrument(Instrumenter.java:166)  at com.atlassian.clover.CloverInstr.execute(CloverInstr.java:76)  at com.atlassian.clover.CloverInstr.mainImpl(CloverInstr.java:54)  at ...  {noformat}    *Planned fix:*     * Ignore 200B characters in Java 7+. Treat 200B character as space in Java 6.   * Question: Shall it be based on source level setting or the JDK detected?   * Question: which other control characters needs to be ignored by Clover?   * Question: which other whitespace characters (other than space, \t, \n, \r) shall be recognized by Clover parser?    *Workaround:*    Remove all 200B character occurrences from the source code.   ",2,2.3801193
CLOV-1841,Prepare feature analysis of JCov tool,Analyse https://wiki.openjdk.java.net/display/CodeTools/jcov    and publish on https://confluence.atlassian.com/display/CLOVER/Comparison+of+code+coverage+tools    ,2,2.4304402
CLOV-1846,IntelliJ Plugin should ask for rebuilding project after changing exclusions,Currently it doesn't always ask which sometime may lead to {{ClassNotFoudException}}    h2. Preconditions  IntelliJ IDEA with Clover installed     h2. Repro steps  # Clean project and coverage db  # Exclude some class with context menu  # Run tests  # Wait for exception    h2. Expected result  # Clean project and coverage db  # Exclude some class with context menu  # Clover asks user for rebuilding the project. ,1,2.1430407
CLOV-1847,IntelliJ Plugin should not use UI thread to generate Cloud report,"Currently Clover generates Cloud report in UI thread, it can take couple of seconds with bigger projects causing whole UI to freeze.     Let's try to move it back to background somehow. ",2,2.3335505
CLOV-1848,Add IntelliJ 15.0.2 to test matrix,Add IntelliJ 15.0.2 to test matrix after it being released. Currently there was RC released. ,1,2.1299093
CLOV-1852,Gradle Spec,Simple spec showing what do we want to achieve and what's the MVP for 4.2.0 ,1,2.00318
CLOV-1855,Drop support for IntelliJ IDEA 11.x,Scope:  * drop support for IntelliJ IDEA 11.x   * refactor deprecated code  * remove IntelliJ 11.x from test matrix  * update plugin.xml to tell correct minimal version of IntelliJ IDEA which is supported. ,1,1.8640686
CLOV-1856,IntelliJ IDEA plugin with version 4.1.1 shows wrong supported version,Site for Clover on IntelliJ plugin page indicates Clover 4.1.1 supports Idea 9x however it's not true.   Update plugin.xml to show correct version.     https://plugins.jetbrains.com/plugin/?id=132 ,1,1.7891586
CLOV-1859,Update Bamboo Clover Plugin (automatic integration shall use new clover-maven-plugin),Place holder for BAM-16590,1,2.7444322
CLOV-1861,Create simple Gradle repository and run Bamboo plan to test it,"Scope: * Create simple Gradle plugin as a holder for Clover for Gradle * Create Bamboo plan, which will: ** fetch source code ** run tests",1,2.4506764
CLOV-1884,CloverCompilerAdapter should look for Javac.compileList also in super classes,"It may happen that user will wrap or subclass the Apache's Javac field. In such case, Clover won't be able to find and set this field and break the build. The CloverCompilerAdapter should look it up in a class hierarchy.     We can use Apache's FieldUtils for this purpose.",1,2.0961204
CLOV-1887,Provide high level instrumentation task which will instrument sources to given directory,Consider only single module java projects for now,4,2.7257872
CLOV-1888,Provide high level task which will execute tests in simple module java project,,4,2.3636398
CLOV-1890,Provide simple reporting task which generate Clover report,Let's stick to html report only for now.    Don't bother about multi project build for now ,2,2.0204651
CLOV-1892,Make Clover instrumentation work in multi java project builds,,3,2.024289
CLOV-1896,Clover shall be able to instrument Test sources,,2,2.7709618
CLOV-1907,TestWithClover task must be aware of instrumented test sources and modify test classpath accordingly,,2,2.3078759
CLOV-1951,Support Eclipse 4.6 Neon,"Make Clover-for-Eclipse compatible with Eclipse Neon. Problems found so far:    1. Running optimised tests throws an exception  {code:java}  eclipse.buildId=4.6.0.I20160525-2000  java.version=1.8.0_51  java.vendor=Oracle Corporation  BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US  Framework arguments: -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product  Command-line arguments: -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -data file:/Users/mparfianowicz/.eclipse-4.6-workspace/ -product org.eclipse.epp.package.java.product    org.eclipse.ui  Error  Tue Jun 14 15:51:17 CEST 2016  Unhandled event loop exception    org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.NullPointerException)   at org.eclipse.swt.SWT.error(SWT.java:4533)   at org.eclipse.swt.SWT.error(SWT.java:4448)   at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)   at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4024)   at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3700)   at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1121)   at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)   at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1022)   at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:150)   at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:687)   at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)   at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:604)   at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)   at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:138)   at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)   at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)   at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)   at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)   at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:497)   at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:673)   at org.eclipse.equinox.launcher.Main.basicRun(Main.java:610)   at org.eclipse.equinox.launcher.Main.run(Main.java:1519)  Caused by: java.lang.NullPointerException   at com.atlassian.clover.eclipse.testopt.views.actions.SavingsNotificationContributionItem$1$1.run(SavingsNotificationContributionItem.java:33)   at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)   at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)   ... 23 more      {code}      2. Deprecated API (/)    SubProgressMonitor in org.eclipse.core.runtime has been deprecated   ViewerSorter in org.eclipse.jface.viewers has been deprecated   setSorter(ViewerSorter) in StructuredViewer has been deprecated   Main(PrintWriter,PrintWriter,boolean) in Main has been deprecated    3. Code incompatibility (/)    CoverageAnnotationModel is not abstract and does not override abstract method getAnnotationIterator() in IAnnotationModel",3,1.8538437
CLOV-1953,Clover does not instrument all nodes in Groovy AST,Problem was reproduced in Groovy 2.4.3 and 2.4.4:    https://answers.atlassian.com/questions/39141626/why-is-clover-showing-green-on-gray    https://answers.atlassian.com/questions/39141622/incomplete-clover-coverage-in-grails-2.5-integration-testing,5,1.942936
CLOV-1955,Support InteliiJ IDEA 2016.2," * add 2016.2.0 to test matrix and verify all tests are green  * switch clover-idea to compile against 2016.2 API, check deprecation warnings, compilation problems",1,1.7608792
CLOV-1960,Instrument Groovy traits and show code coverage for them,"*Current status*    Groovy 2.3 introduced traits - a code construct for composition of behaviours:   * http://docs.groovy-lang.org/latest/html/documentation/core-traits.html    Currently Clover handles them like an interface - it records the class name in a database but it does not instrument the class, so it shows no code coverage in reports for them.     Side note: Clover's reports by default do not show classes containing no executable code (empty classes, plain enums, interfaces with no default methods, traits) - you can show them by setting [showEmpty=true|https://confluence.atlassian.com/display/CLOVER/clover-report] parameter.    *Proposed improvement*    Instrument Groovy traits like normal classes or enums.     Side note: Groovy 2.5 will probably not introduce interfaces with default methods (like in Java 8).    * http://docs.groovy-lang.org/next/html/documentation/#_interface    *Technical obstacles*    * method '$CLV_R$' is private but should be public in a trait  * method 'com_atlassian_clover.CoverageRecorder $CLV_R$()' must not be static; only fields may be static in a trait  * field '$CLV_R$' is not 'public static final' in a trait  ",8,2.2738998
